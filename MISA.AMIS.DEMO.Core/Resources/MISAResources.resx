<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="customer" xml:space="preserve">
    <value>customer</value>
  </data>
  <data name="employee" xml:space="preserve">
    <value>employee</value>
  </data>
  <data name="Enum_Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="Enum_Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Enum_Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="InValidMsg_AddressTooLong" xml:space="preserve">
    <value>The address must not exceed 255 characters</value>
  </data>
  <data name="InValidMsg_AuthenticationFail" xml:space="preserve">
    <value>Authentication failed</value>
  </data>
  <data name="InValidMsg_BankAccountTooLong" xml:space="preserve">
    <value>Bank account must not exceed 20 characters</value>
  </data>
  <data name="InValidMsg_BankBranchTooLong" xml:space="preserve">
    <value>Bank branch must not exceed 100 characters</value>
  </data>
  <data name="InValidMsg_BankNameTooLong" xml:space="preserve">
    <value>Bank name must not exceed 100 characters</value>
  </data>
  <data name="InValidMsg_CantGetNewCode" xml:space="preserve">
    <value>Can't get new code. Please try again later</value>
  </data>
  <data name="InValidMsg_DataImportIsEmpty" xml:space="preserve">
    <value>Import data is empty</value>
  </data>
  <data name="InValidMsg_DateIdentityInvalid" xml:space="preserve">
    <value>Issue date is not in correct date format</value>
  </data>
  <data name="InValidMsg_DateMustBefore" xml:space="preserve">
    <value>The selected date cannot be greater than the current date</value>
  </data>
  <data name="InValidMsg_DateOfBirthInvalid" xml:space="preserve">
    <value>Date of birth is not in correct date format</value>
  </data>
  <data name="InValidMsg_DateType" xml:space="preserve">
    <value>Incorrect date format</value>
  </data>
  <data name="InValidMsg_DepartmentCodeRequired" xml:space="preserve">
    <value>Department code is required</value>
  </data>
  <data name="InValidMsg_DepartmentCodeTooLong" xml:space="preserve">
    <value>Department code must not exceed 20 characters.</value>
  </data>
  <data name="InValidMsg_DepartmentInvalid" xml:space="preserve">
    <value>Invalid department</value>
  </data>
  <data name="InValidMsg_DepartmentNameRequired" xml:space="preserve">
    <value>Department name is required</value>
  </data>
  <data name="InValidMsg_DepartmentRequired" xml:space="preserve">
    <value>Department is required</value>
  </data>
  <data name="InValidMsg_DuplicateEmployeeCode" xml:space="preserve">
    <value>Employee code &lt;{0}&gt; already exists in the system</value>
  </data>
  <data name="InValidMsg_DuplicateInput" xml:space="preserve">
    <value>Duplicate error</value>
  </data>
  <data name="InValidMsg_DuplicatePhoneNumber" xml:space="preserve">
    <value>Phone number &lt;{0}&gt; is registered</value>
  </data>
  <data name="InValidMsg_EmailTooLong" xml:space="preserve">
    <value>Email must not exceed 100 characters</value>
  </data>
  <data name="InValidMsg_EmployeeCodeInvalidImport" xml:space="preserve">
    <value>The employee code already exists in the system</value>
  </data>
  <data name="InValidMsg_EmployeeCodeInvalidImportInFile" xml:space="preserve">
    <value>The employee code already exists on the import file</value>
  </data>
  <data name="InValidMsg_EmployeeCodeRequired" xml:space="preserve">
    <value>Employee code is required</value>
  </data>
  <data name="InValidMsg_EmployeeCodeTooLong" xml:space="preserve">
    <value>Employee code must not exceed 20 characters</value>
  </data>
  <data name="InValidMsg_FileInvalidFormat" xml:space="preserve">
    <value>The file is not in the correct format provided</value>
  </data>
  <data name="InValidMsg_FileInvalidLenght" xml:space="preserve">
    <value>The file is empty, please check again</value>
  </data>
  <data name="InValidMsg_FileInvalidType" xml:space="preserve">
    <value>The file provided is invalid, only '.xlsx' files are accepted</value>
  </data>
  <data name="InValidMsg_FullNameRequired" xml:space="preserve">
    <value>Full name is required</value>
  </data>
  <data name="InValidMsg_FullNameTooLong" xml:space="preserve">
    <value>Full name must not exceed 100 characters</value>
  </data>
  <data name="InValidMsg_IdentityNumberTooLong" xml:space="preserve">
    <value>Citizen identification card must not exceed 25 characters</value>
  </data>
  <data name="InValidMsg_IdentityPlaceTooLong" xml:space="preserve">
    <value>Place of issue cannot exceed 100 characters</value>
  </data>
  <data name="InValidMsg_ImportDataNotExistInCache" xml:space="preserve">
    <value>Imported data is deleted from Cache</value>
  </data>
  <data name="InValidMsg_ImportTImeOut" xml:space="preserve">
    <value>Data import session expired</value>
  </data>
  <data name="InValidMsg_InValidDateOfBirth" xml:space="preserve">
    <value>Date of birth cannot be greater than current date</value>
  </data>
  <data name="InValidMsg_InvalidEmail" xml:space="preserve">
    <value>Invalid email</value>
  </data>
  <data name="InValidMsg_InValidIdentityDate" xml:space="preserve">
    <value>The issue date cannot be greater than the current date</value>
  </data>
  <data name="InValidMsg_InValidInformation" xml:space="preserve">
    <value>Incorrect information</value>
  </data>
  <data name="InValidMsg_InValidInput" xml:space="preserve">
    <value>Input error</value>
  </data>
  <data name="InValidMsg_InvalidPrefixEmployeeCode" xml:space="preserve">
    <value>The employee code must begin with the prefix "NV-"</value>
  </data>
  <data name="InValidMsg_InvalidSuffixEmployeeCode" xml:space="preserve">
    <value>The employee code suffix must be digits</value>
  </data>
  <data name="InValidMsg_LoginInfomation" xml:space="preserve">
    <value>Username or password is incorrect</value>
  </data>
  <data name="InValidMsg_NotExistInput" xml:space="preserve">
    <value>Data does not exist</value>
  </data>
  <data name="InValidMsg_OnlyNumberIdentityNumber" xml:space="preserve">
    <value>The identification number must only contain numeric characters</value>
  </data>
  <data name="InValidMsg_OnlyNumberPhone" xml:space="preserve">
    <value>Phone numbers must only contain numeric characters</value>
  </data>
  <data name="InValidMsg_PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="InValidMsg_PhoneNumberTooLong" xml:space="preserve">
    <value>Phone number must not exceed 15 characters</value>
  </data>
  <data name="InValidMsg_PositionCodeRequired" xml:space="preserve">
    <value>Position code is required</value>
  </data>
  <data name="InValidMsg_PositionCodeTooLong" xml:space="preserve">
    <value>Position code must not exceed 20 characters.</value>
  </data>
  <data name="InValidMsg_PositionInvalid" xml:space="preserve">
    <value>Invalid position</value>
  </data>
  <data name="InValidMsg_PositionNameRequired" xml:space="preserve">
    <value>Position name is required</value>
  </data>
  <data name="InValidMsg_SystemError" xml:space="preserve">
    <value>System error</value>
  </data>
  <data name="InValidMsg_UnauthorizedUser" xml:space="preserve">
    <value>Invalid token</value>
  </data>
  <data name="InValidMsg_UserNameRequired" xml:space="preserve">
    <value>Username is required</value>
  </data>
</root>